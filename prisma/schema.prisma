generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  forecasts     Forecast[]
  skus          SKU[]
}

model Forecast {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  
  // SKU Relation
  skuId           String?
  sku             SKU?      @relation(fields: [skuId], references: [id])
  
  // Product Information (legacy support)
  productName     String
  productCategory String
  skuCode         String?   // renamed from sku to avoid confusion
  
  // Forecast Data
  period          DateTime
  forecastValue   Float
  actualValue     Float?
  
  // Additional Metrics
  units           Int?
  revenue         Float?
  confidence      Float?    // Confidence level of forecast (0-100)
  
  // Metadata
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@index([userId])
  @@index([skuId])
  @@index([period])
  @@index([productCategory])
}

model SKU {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  
  // Basic Information
  sku             String    @unique
  displayName     String
  category        String
  description     String?
  
  // Inventory Management
  currentStock    Int       @default(0)
  leadTime        Int       @default(7)     // Days to receive new stock
  reorderPoint    Int       @default(0)     // When to reorder
  safetyStock     Int       @default(0)     // Buffer stock
  moq             Int       @default(1)     // Minimum Order Quantity
  
  // Financial
  costPrice       Float     @default(0)
  sellingPrice    Float     @default(0)
  holdingCost     Float     @default(0)     // Cost per unit per period
  
  // ABC Analysis
  abcCategory     String?   // A, B, or C
  annualRevenue   Float     @default(0)
  annualVolume    Int       @default(0)
  
  // Status
  status          String    @default("active") // active, discontinued, seasonal
  stockStatus     String?   // healthy, low-stock, out-of-stock, overstocked
  
  // Metadata
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relations
  forecasts       Forecast[]
  
  @@index([userId])
  @@index([category])
  @@index([abcCategory])
  @@index([status])
}

model ImportHistory {
  id            String    @id @default(cuid())
  fileName      String
  importedBy    String
  recordsCount  Int
  status        String    // success, failed, partial
  errorMessage  String?
  createdAt     DateTime  @default(now())
}